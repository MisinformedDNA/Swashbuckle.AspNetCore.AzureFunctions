pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  Major: '2'
  Minor: '0'
  Patch: '0'
steps:

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master-new'))
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    nobuild: true
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Patch)'

- task: NuGetAuthenticate@0
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master-new'))

- task: DotNetCoreCLI@2
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master-new'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '62df761f-09f5-47be-9f8f-ce7411233f5b/5e77ab61-9988-4ba5-9bb2-2979e706e09d'

- task: NuGetCommand@2
  condition: always()
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '62df761f-09f5-47be-9f8f-ce7411233f5b/5e77ab61-9988-4ba5-9bb2-2979e706e09d'
